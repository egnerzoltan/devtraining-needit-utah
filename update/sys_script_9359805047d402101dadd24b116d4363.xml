<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>ServerSideAPICall_POST</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {


	// Add your code here


try {


	
	gs.info("ServerSideAPICall_POST start1");
	gs.info("current1: " + current);
	
	
	
	var currentJsonString = "";
	var currentUserString = "";
	
	try{
		currentJsonString = new JSONG().convertGrToJSON(current);
		currentUserString = new JSONG().convertGrToJSON(gs.getUser());
	}
	catch(ex2){
		gs.error("JSONG error1: " + ex2);
	}

	
	gs.info("current json: " +  currentJsonString);
    var restMessage = new sn_ws.RESTMessageV2();
    restMessage.setHttpMethod("POST");
    restMessage.setEndpoint("https://app-sl-snow-sample-api-dev-weu.azurewebsites.net/WeatherForecast");
    restMessage.setRequestHeader("Accept", "application/json");
    restMessage.setRequestHeader("Content-Type", "application/json");
    restMessage.setRequestBody(JSON.stringify({email:'ServerSide_email', password: 'ServerSide_pass', user: null, currentuser: currentUserString, data: currentJsonString}));
    var response = restMessage.execute();
    if (response.getStatusCode() === 200) {
gs.info("statuscod == 200")
        var responseBody = response.getBody();
        var responeData = JSON.parse(responseBody);

gs.info("responseBody: " + responseBody )
        // process successful response
    } else if (response.getStatusCode() === 0) {
gs.error("statuscod == 0")
gs.error("responseBody: " + responseBody )
        // process connect timed out
    } else {
        // process error response
        var statusCode = response.getStatusCode();
        var erorMessage = response.getErrorMessage();
        var contentType = response.getHeader("Content-Type");
        var body = response.getBody();
        // ...
		gs.info("API CALL response: " + body);
		gs.info("ServerSideAPICall_POST end");
    }
} catch (ex) {
    // process exception
gs.error("error on api call1")
		gs.error("API CALL error1: " + ex.ToString());
	
} 

/*	
    // Creating Our XMLHttpRequest object 
    var xhr = new XMLHttpRequest();
 
    // Making our connection  
    var url = 'https://localhost:7161/WeatherForecast';
    xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-type", "application/json");
	xhr.setRequestHeader("Accept", "application/json");
	
    // function execute after request is successful 
    xhr.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            alert(this.responseText);
        }
    }
    // Sending our request 
    //xhr.send(JSON.stringify({email:'email', password: 'pass', user: {userName: g_user.userName, userID: g_user.userID, firstName: g_user.firstName, lastName: g_user.lastName} }));
	xhr.send(JSON.stringify({email:'ServerSide_email', password: 'ServerSide_pass', user: g_user, form: g_form, data: current})); 
*/

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-07 10:04:15</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9359805047d402101dadd24b116d4363</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>ServerSideAPICall_POST</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_9359805047d402101dadd24b116d4363</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-07 12:47:37</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9359805047d402101dadd24b116d4363"/>
</record_update>
